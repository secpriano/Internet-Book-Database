@model IBDbWebApplication.Models.AdminModels.BookModels.BookViewModel
@{
    ViewData["Title"] = "IBDb | Admin book";
}
<div class="container">
    <div class="hero">
        <h1>Manage books</h1>
    </div>
    <section>
        <ul class="operations">
            <li>
                <div class="operation-button" onclick="ShowDialogAddBook()">
                    <p>âž•</p>
                    <h2>Create</h2>
                </div>
                <dialog id="AddBookForm">
                    <h3>Add a book</h3>
                    <form action="/Book/AddBook" method="post">
                        <fieldset>
                        <button type="button" class="btn-close" onclick="CloseDialogAddBook()">X</button>
                        <div class="form-group">
                            <label>Isbn</label>
                            <input placeholder="0123456789123" asp-for="Isbn"/>
                        </div>
                        <div class="form-group">
                            <label>Title</label>
                            <input placeholder="The Hobbit" asp-for="Title"/>
                        </div>
                        <div class="form-group">
                            <label>Synopsis</label>
                            <textarea placeholder="The Hobbit is a children's fantasy novel by J. R. R. Tolkien. It was published on 21 September 1937 to wide critical acclaim, being nominated for the Carnegie Medal and awarded a prize from the New York Herald Tribune for best juvenile fiction. The book remains popular and is recognized as a classic in children's literature." asp-for="Synopsis"></textarea>
                        </div>
                        <div class="form-group">
                            <label>Publish date</label>
                            <input id="PublishDate" asp-for="PublishDate"/>
                        </div>
                        <div class="form-group">
                            <label>Amount pages</label>
                            <input placeholder="295" asp-for="AmountPages"/>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Authors, "Authors")
                            @Html.DropDownListFor(Model => Model.Authors, new MultiSelectList(Model.AuthorModels, "Id", "Name"), new { @class = "js-example-basic-multiple", @name = "states[]", @multiple = "multiple" })
                            @Html.ValidationMessageFor(Model => Model.Authors, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label>Publisher</label>
                            <select id="SelectType" asp-for="Publisher">
                                @foreach (var publisherModel in Model.PublisherModels)
                                {
                                    <option value="@publisherModel.Id">@publisherModel.Name</option>
                                }
                            </select>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Genres, "Genres")
                            @Html.DropDownListFor(Model => Model.Genres, new MultiSelectList(Model.GenreModels, "Id", "Name"), new { @class = "js-example-basic-multiple", @name = "states[]", @multiple = "multiple" })
                            @Html.ValidationMessageFor(Model => Model.Genres, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Themes, "Themes")
                            @Html.DropDownListFor(Model => Model.Themes, new MultiSelectList(Model.ThemeModels, "Id", "Description"), new { @class = "js-example-basic-multiple", @name = "states[]", @multiple = "multiple" })
                            @Html.ValidationMessageFor(Model => Model.Themes, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Settings, "Settings")
                            @Html.DropDownListFor(Model => Model.Settings, new MultiSelectList(Model.SettingModels, "Id", "Description"), new { @class = "js-example-basic-multiple", @name = "states[]", @multiple = "multiple" })
                            @Html.ValidationMessageFor(Model => Model.Settings, "", new { @class = "text-danger" })
                        </div>
                        </fieldset>
                        <button id="ButtonMelding" class="button announcementBtn" type="submit">Add book</button>
                    </form>
                </dialog>
            </li>
        </ul>
    </section>
    @if (Model.BookModels is not null)
    {
        @foreach (var book in Model.BookModels)
        {
            <div>
                <div>
                    <h3>@book.Title</h3>
                    <p>@book.Isbn</p>
                    <p>@book.Publisher.Name</p>
                    <p>@book.AmountPages</p>

                    @foreach (var author in Model.AuthorModels)
                    {
                        <p>@author.Name</p>
                    }

                    @foreach (var genre in Model.GenreModels)
                    {
                        <p>@genre.Name</p>
                    }

                    @foreach (var theme in Model.ThemeModels)
                    {
                        <p>@theme.Description</p>
                    }

                    @foreach (var setting in Model.SettingModels)
                    {
                        <p>@setting.Description</p>
                    }
                </div>
            </div>
        }
    }
</div>

<script>          
    function ShowDialogAddBook() {
        document.getElementById("AddBookForm").showModal();
        $('.js-example-basic-multiple').select2();
    }

    function CloseDialogAddBook() {
        document.getElementById("AddBookForm").close();
    }
</script>
