@using IBDbWebApplication.Models.Entity
@model IBDbWebApplication.Models.AdminModels.BookModels.BookViewModel
@{
    ViewData["Title"] = "IBDb | Admin book";
}
<div class="MainContainer">
    <div class="hero">
        <h1>Manage books</h1>
    </div>
    <section>
        <ul class="operations">
            <li>
                <div class="operation-button" onclick="ShowDialog()">
                    <p>âž•</p>
                    <h2>Create</h2>
                </div>
                <dialog id="AddBookForm">
                    <div class="modal-content">
                    @using (@Html.BeginForm("AddBook", "Book", FormMethod.Post))
                    {
                        <button type="button" class="btn-close" onclick="CloseDialog()">X</button>
                        <fieldset>
                            <legend>Add a book</legend>
                            <div class="split">
                                <div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Isbn, "Isbn")
                                        @Html.TextBoxFor(Model => Model.Isbn, new { @class = "form-control", @placeholder = "0123456789123" })
                                        @Html.ValidationMessageFor(model => model.Isbn, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Title, "Title")
                                        @Html.TextBoxFor(Model => Model.Title, new { @class = "form-control", @placeholder = "The Hobbit" })
                                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(Model => Model.Synopsis, "Synopsis")
                                        @Html.TextAreaFor(model => model.Synopsis, new { @class = "form-control", @placeholder = "The Hobbit is a children's fantasy novel by J. R. R. Tolkien. It was published on 21 September 1937 to wide critical acclaim, being nominated for the Carnegie Medal and awarded a prize from the New York Herald Tribune for best juvenile fiction. The book remains popular and is recognized as a classic in children's literature." })
                                        @Html.ValidationMessageFor(model => model.Synopsis, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PublishDate, "Publish date")
                                        <input id="PublishDate" asp-for="PublishDate"/>
                                        @Html.ValidationMessageFor(model => model.PublishDate, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.AmountPages, "Amount pages")
                                        @Html.TextBoxFor(model => model.AmountPages, new { @class = "form-control", @placeholder = "123" })
                                        @Html.ValidationMessageFor(model => model.AmountPages, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div>
                                    <div class="form-group">
                                        @Html.LabelFor(bookViewModel => bookViewModel.AuthorIds, "Authors")
                                        @Html.DropDownListFor(bookViewModel => bookViewModel.AuthorIds, new MultiSelectList(Model.AuthorModels, "Id", "Name"), new { @class = "js-example-basic-multiple", @name = "states[]", @multiple = "multiple" })
                                        @Html.ValidationMessageFor(bookViewModel => bookViewModel.AuthorIds, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(bookViewModel => bookViewModel.PublisherId, "Publisher")
                                        @Html.DropDownListFor(bookViewModel => bookViewModel.PublisherId, new MultiSelectList(Model.PublisherModels, "Id", "Name"), new { @class = "js-example-basic-single", @name = "state" })
                                        @Html.ValidationMessageFor(bookViewModel => bookViewModel.PublisherId, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(bookViewModel => bookViewModel.GenreIds, "Genres")
                                        @Html.DropDownListFor(bookViewModel => bookViewModel.GenreIds, new MultiSelectList(Model.GenreModels, "Id", "Name"), new { @class = "js-example-basic-multiple", @name = "states[]", @multiple = "multiple" })
                                        @Html.ValidationMessageFor(bookViewModel => bookViewModel.GenreIds, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(bookViewModel => bookViewModel.ThemeIds, "Themes")
                                        @Html.DropDownListFor(bookViewModel => Model.ThemeIds, new MultiSelectList(Model.ThemeModels, "Id", "Description"), new { @class = "js-example-basic-multiple", @name = "states[]", @multiple = "multiple" })
                                        @Html.ValidationMessageFor(bookViewModel => Model.ThemeIds, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(bookViewModel => bookViewModel.SettingIds, "Settings")
                                        @Html.DropDownListFor(bookViewModel => bookViewModel.SettingIds, new MultiSelectList(Model.SettingModels, "Id", "Description"), new { @class = "js-example-basic-multiple", @name = "states[]", @multiple = "multiple" })
                                        @Html.ValidationMessageFor(bookViewModel => bookViewModel.SettingIds, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                        <button id="ButtonMelding" type="submit">Add book</button>
                    }
                    </div>
                </dialog>
            </li>
        </ul>
    </section>
    <table>
        <thead>
        <tr>
            <th>Title</th>
            <th>Isbn</th>
            <th>Synopsis</th>
            <th>Publisher</th>
            <th>Pages</th>
            <th>Authors</th>
            <th>Genres</th>
            <th>Themes</th>
            <th>Settings</th>
        </tr>
        </thead>
        <tbody>
        @foreach (BookModel book in Model.BookModels)
        {
            <tr>
                <td>@book.Title</td>
                <td>@book.Isbn</td>
                <td>@book.Synopsis</td>
                <td>@book.Publisher.Name</td>
                <td>@book.AmountPages</td>
                <td>
                    @foreach (AuthorModel author in book.Authors)
                    {
                        <p>@author.Name</p>
                    }
                </td>
                <td>
                    @foreach (GenreModel genre in book.Genres)
                    {
                        <p>@genre.Name</p>
                    }
                </td>
                <td>
                    @foreach (ThemeModel theme in book.Themes)
                    {
                        <p>@theme.Description</p>
                    }
                </td>
                <td>
                    @foreach (SettingModel setting in book.Settings)
                    {
                        <p>@setting.Description</p>
                    }
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>

<script>          
    $('.js-example-basic-multiple').select2();
    $('.js-example-basic-single').select2();
</script>
